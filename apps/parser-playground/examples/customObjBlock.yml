title: Custom "object"-block
order: 110

config: |
    //
    // Custom blocks with complex structure is a huge mess when it comes to recognizing them inside text...
    // Fortunately, Bitran allows you to use YAML-structured blocks which are called "object"-blocks!
    // In this example we will create custom "object"-block for designating quotes of famous people.
    //

    import { ProductIds, ObjBlockFactory, defineConfig } from 'bitran-parser';

    //
    // Defining "Quote" block data structure
    //

    class Quote
    {
        author: string;
        content: ProductIds; // Not "string" because the quote content can consist of many blocks!
    }

    //
    // Defining factory which converts string block to object block during parsing
    //

    class FQuote extends ObjBlockFactory<Quote>
    {
        objType = 'quote'; // We are looking for string blocks which start with "@quote"

        // Notice how we don't need to create 'canFabricate(...)' method
        // because Bitran does this automatically based on 'objType' property!
        //
        // Bitran also parses YAML-block and provides it for us to fabricate data:
        async objFabricateData(obj: any)
        {
            const quote = new Quote;
            quote.author = obj.author ?? 'Anonymous';

            if (!obj.content)
                throw new Error('Missing qoute content!');

            // Parsing quote content blocks and receive their ids
            quote.content = await this.process.parseBlocks(obj.content);

            return quote;
        }
    }

    //
    // Registering our custom "obj"-block in Bitran Parser
    //

    export default defineConfig({
        products: {
            quote: FQuote
        }
    });


content: |
    { .foo .bar }
    @quote
        author: Nelson Mandela
        content: |
            The greatest glory in living lies not in never falling, but in rising every time we fall.

    @quote
        author: No content so this will fail!

    @quote
        author: Parent quote
        content: |
            Paragraph foo.

            Paragraph bar.

            { #unique-nested-quote }
            @quote
                author: Nested quote
                content: |
                    I am a nested quote!